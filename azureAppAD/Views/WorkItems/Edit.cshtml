@model azureAppAD.Models.WorkItem

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm("Create", "WorkItems", FormMethod.Post, new { id = "main-form" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>WorkItem</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ItemID)

        <div class="form-group">
            @Html.LabelFor(model => model.AssignedToID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AssignedToID, new { htmlAttributes = new { @class = "form-control", @type = "hidden" } })
                @Html.ValidationMessageFor(model => model.AssignedToID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AssignedToName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AssignedToName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AssignedToName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Status, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" id="submit-button" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
         // People/Group Picker Code
         var maxResultsPerPage = 14;
         var input = document.getElementById("AssignedToName");

         // Access token from request header, and tenantID from claims identity
         var token = "@Request.Headers["X-MS-TOKEN-AAD-ACCESS-TOKEN"]";
         var tenant ="@(System.Security.Claims.ClaimsPrincipal.Current.Claims
                         .Where(c => c.Type == "http://schemas.microsoft.com/identity/claims/tenantid")
                         .Select(c => c.Value).SingleOrDefault())";

         var picker = new AadPicker(maxResultsPerPage, input, token, tenant);

         // Submit the selected user/group to be asssigned.
         $("#submit-button").click({ picker: picker }, function () {
             if (!picker.Selected())
                 return;
             $("#main-form").get()[0].elements["AssignedToID"].value = picker.Selected().objectId;
         });
</script>
}
